import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ReduxProvider from "@/providers/reducProvider";
import { ToastContainer } from "react-toastify";
import "react-tooltip/dist/react-tooltip.css";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import FloatingContactButtons from "@/components/FloatingContact";
import "bootstrap/dist/css/bootstrap.min.css";
import { headers } from "next/headers";
import AuthProvider from "@/providers/AuthProvider";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const headersList = await headers();
    const pathname = headersList.get("x-current-pathname") || "";

    return (
        <html lang="en" suppressHydrationWarning data-scroll-behavior="smooth">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                <AuthProvider>
                    <ReduxProvider>
                        {pathname.startsWith("/login") ||
                        pathname.startsWith("/signup") ? (
                            <>{children}</>
                        ) : (
                            <>
                                <Navbar />
                                {children}
                                <Footer />
                                <FloatingContactButtons />
                            </>
                        )}
                    </ReduxProvider>
                </AuthProvider>
                <ToastContainer
                    position="top-right"
                    autoClose={3000}
                    hideProgressBar={false}
                    newestOnTop={false}
                    closeOnClick
                    rtl={false}
                    pauseOnFocusLoss
                    draggable
                    pauseOnHover
                    theme="light"
                />
                {/* <Tooltip /> */}
            </body>
        </html>
    );
}
